AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'ApiGatewatAuth

  Sample SAM Template for ApiGatewatAuth

  '
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
Resources:
  HelloWorldAuth:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ressolve-research-gateway-openauth-demo/6e4902634676c9a099e86bad0e53c2b3
      Handler: helloWorldAuth.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            RestApiId:
              Ref: ApiAuthOpen
    Metadata:
      SamResourceId: HelloWorldAuth
  HelloWorldAuthIAM:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ressolve-research-gateway-openauth-demo/a411a61f34f65842b7b5fc00d8908169
      Handler: HelloWorldAuthIAM.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /helloIAM
            Method: get
            RestApiId:
              Ref: ApiAuthOpen
    Metadata:
      SamResourceId: HelloWorldAuthIAM
  helloWorldCognito:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ressolve-research-gateway-openauth-demo/38a071b6b007a80efed93d6e37c082c0
      Handler: helloWorldCognito.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /helloWorldCognito
            Method: get
            RestApiId:
              Ref: ApiAuthOpen
    Metadata:
      SamResourceId: helloWorldCognito
  createCognitoUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ressolve-research-gateway-openauth-demo/770f57de6eaef8a8ad1f477f22b1cada
      Handler: createCognitoUser.lambdaHandler
      Role:
        Fn::GetAtt:
        - cognitoRole
        - Arn
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createCognitoUser
            Method: post
            RestApiId:
              Ref: ApiAuthOpen
    Metadata:
      SamResourceId: createCognitoUser
  cognitoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: api-gateway-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cognito-idp:*
            Resource:
            - Fn::GetAtt:
              - cogUser
              - Arn
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      SamResourceId: cognitoRole
  callerUser:
    Type: AWS::IAM::User
    Properties:
      UserName: callerUser
    Metadata:
      SamResourceId: callerUser
  callerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: callerPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - execute-api:Invoke
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:*:${ApiAuthOpen}/testing/GET/helloIAM
      Users:
      - Ref: callerUser
    Metadata:
      SamResourceId: callerPolicy
  cogUser:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: authCognito
      UsernameAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
      Schema:
      - Name: email
        Required: true
        AttributeDataType: String
        Mutable: true
      - Name: given_name
        Required: true
        AttributeDataType: String
        Mutable: true
      - Name: family_name
        Required: true
        AttributeDataType: String
        Mutable: true
    Metadata:
      SamResourceId: cogUser
  AuthAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: cogUser
    Metadata:
      SamResourceId: AuthAppClient
  ApiAuthOpen:
    Type: AWS::Serverless::Api
    Properties:
      StageName: testing
      Name: ApiAuthOpen
      DefinitionBody:
        swagger: '2.0'
        info:
          title: ApiAuthOpen-title
          version: '1'
        basePath: /ApiAuthOpen
        schemes:
        - https
        paths:
          /hello:
            get:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldAuth.Arn}/invocations
                httpMethod: POST
          /helloIAM:
            get:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-auth:
                type: AWS_IAM
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldAuthIAM.Arn}/invocations
                httpMethod: POST
          /helloWorldCognito:
            get:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-auth:
                type: NONE
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloWorldCognito.Arn}/invocations
                httpMethod: POST
          /createCognitoUser:
            post:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${createCognitoUser.Arn}/invocations
                httpMethod: POST
    Metadata:
      SamResourceId: ApiAuthOpen
