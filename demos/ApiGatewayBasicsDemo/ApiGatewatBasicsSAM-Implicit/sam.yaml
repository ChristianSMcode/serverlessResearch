AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'ApiGatewatBasicsSAM-Implicit

  Sample SAM Template for ApiGatewatBasicsSAM-Implicit

  '
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
Resources:
  calculatorFunctionNonProxy:
    Type: AWS::Serverless::Function
    Properties:
      Description: Testing
      CodeUri: s3://ressolve-research-gateway-basics-demo/a13f0c9ad56fe076b9dc5fb076fa4ca5
      Handler: calculator.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /calculate3/{operation}
            Method: POST
            RestApiId:
              Ref: ApiGatewayBasics
    Metadata:
      SamResourceId: calculatorFunctionNonProxy
  calculatorProxy:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ressolve-research-gateway-basics-demo/e64f4185e5b78357539c02d8e78b9586
      Handler: calculator.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /calculate2/{operation}
            Method: POST
            RestApiId:
              Ref: ApiGatewayBasics
    Metadata:
      SamResourceId: calculatorProxy
  ApiGatewayBasics:
    Type: AWS::Serverless::Api
    Properties:
      Name: ApiGatewayBasics
      StageName: TestingGateway
      DefinitionBody:
        swagger: '2.0'
        info:
          title: ApiGatewayBasics-title
          version: '1'
        basePath: /baseTestPath
        schemes:
        - https
        x-amazon-apigateway-request-validators:
          headerAndStringParams:
            validateRequestBody: false
            validateRequestParameters: true
        paths:
          /calculate1/{operation}:
            post:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-integration:
                type: aws
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${calculatorFunctionNonProxy.Arn}/invocations
                httpMethod: POST
          /calculate2/{operation}:
            post:
              parameters:
              - name: test
                in: query
                type: string
                required: true
              - name: Header-Test
                in: header
                type: string
                required: true
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
                '400':
                  description: bad
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${calculatorProxy.Arn}/invocations
                httpMethod: POST
              x-amazon-apigateway-request-validator: headerAndStringParams
          /mockIntegration:
            post:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                '400':
                  description: 400 response
              x-amazon-apigateway-integration:
                responses:
                  4\d{2}:
                    statusCode: '400'
                    responseTemplates:
                      application/json: "#set($body = $context.requestOverride.path.body)\r\
                        \n{\r\n    \"statusCode\": 400,\r\n    \"message\": \"The\
                        \ invoked method is not supported on the API resource.\",\r\
                        \n    \"metadata\" {\r\n        \"httpMethod\":$context.httpMethod,\r\
                        \n        \"body\":$body,\r\n        \"custom\" : $input.params()\r\
                        \n        }\r\n}"
                  default:
                    statusCode: '200'
                    responseTemplates:
                      application/json: "#set($body = $context.requestOverride.path.body)\r\
                        \n{\r\n    \"statusCode\": 200,\r\n    \"message\": \"Go ahead\
                        \ without me\",\r\n    \"metadata\" {\r\n        \"httpMethod\"\
                        :$context.httpMethod,\r\n        \"body\":$body,\r\n     \
                        \   \"custom\" : $input.params()\r\n    }\r\n}"
                requestTemplates:
                  application/json: "#set($context.requestOverride.path.body = $input.body)\r\
                    \n{\r\n  #if( $input.params('scope') == \"internal\" )\r\n   \
                    \ \"statusCode\": 200,\r\n  #else\r\n    \"statusCode\": 400,\r\
                    \n  #end\r\n}"
                passthroughBehavior: when_no_templates
                type: mock
          /httpIntegration:
            get:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-integration:
                type: HTTP
                uri: https://jsonplaceholder.typicode.com/users
                httpMethod: GET
                responses:
                  default:
                    statusCode: 200
                  passthroughBehaviour: when_no_match
            post:
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                '200':
                  description: ok
              x-amazon-apigateway-integration:
                type: HTTP_PROXY
                uri: https://jsonplaceholder.typicode.com/posts
                httpMethod: POST
                responses:
                  default:
                    statusCode: 200
                  passthroughBehaviour: when_no_match
    Metadata:
      SamResourceId: ApiGatewayBasics
